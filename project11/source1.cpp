//#include <iostream> //iostream이라는 헤더를 가져온다.
//// #include는 컴파일러에게 헤더 파일( 라이브러리 파일 / 인클루드 파일 )을 해당 코드에 추가하라는 전처리기
//
//// 컴파일러(Compiler) : 프로그래밍 언어를 기계어(컴퓨터가 사용하는 언어)로 번역하는 장치(코드 작업할 프로그램)
//
////헤더 파일 / 라이브러리 파일(Library) / 인클루드 파일 (=쉽게 말해 공구상자)
////프로그램에서 특정 작업을 하기 위해 기능들을 따로 모아놓은 파일
////직접 개발하는 경우도 존재, winodws kit에서 따로 제공해주는 파일들을 가져와 사용하는 경우도 존재.(이게 일반적)
//
////전처리기(preprocessor) : 프로그램이 작업을 하기 이전에 먼저 처리하는 도구
////기능에 대한 사전 준비, 특정 작업에 대한 제한, 프로그램에서 사용할 값에 대한 정의(매크로)
//
////#include : 전처리기 중에서도 코드 추가 기능
////#define : 전처리기 중 특정 값에 대한 정의(매크로)
////#pragma :  전처리기 중에 특정 작업에 대한 처리 / 제한
//
//// input output stream
//// input : 입력 
//// output : 출력
//// stream : 연속적인 데이터의 흐름 또는 데이터를 전송하는 소프트웨어 모듈(프로그램을 구성하는 구성 요소, 도구)을 의미
//
//// c++에서 사용하는 입출력 보조 도구(c언어의 <stdio.h>를 대신해 사용)
//
//#define PASS 1 //PASS 값을 1이라고 정의
//
////함수 : 하나의 명령을 수행하기 위해 명령문들을 모아놓은 명령문 집합체(수학의 함수랑 다름)
//
////프로그램이 실행되는 영역 main 함수
////해당 코드가 존재해야 프로그램을 실행할 수 있다.
////전체 프로젝트에서 main 함수는 1개만 존재할 수 있다.
//int main() //메인 함수로 코드를 실행할때 기본적으로 가장 먼저 실행되는 함수
////메인 함수가 실행되면 내부에 작성한 코드가 순차적으로 실행된다.
//{
//#if PASS //PASS가 값으로써 사용되고, 정의되어 있을 때(0이 아닌 값일때)[현재 pass는 1이라고 정의해놓음]에는 " " 콘솔로 출력해주세요.
//	std::cout << "PASS는 프로그램 안에 정의되어 있습니다." << std::endl; //
//#else //PASS가 값으로써 사용되고 있지 않은 경우(0일 때, 정의되지 않을때)는 " " 콘솔로 출력해주세요.
//	std::cout << "PASS는 0으로 컴파일되지 않습니다." << std::endl; 
//	//c언어의 형태로 위의 코드를 바꿨을 경우
//	prinf("PASS는 0으로 컴파일되지 않습니다.\n"); 
//
//#endif
//
////std::cout은 std라는 저장 공간에 있는 cout(Console OUTput : 콘솔에 출력해주세요.)이라고 해석
////cout를 사용하려면 #include<iostream>을 추가해야함.
//
////std::cout은 iostream에서 제공해주는 출력 개체(object)이다.
//// <<를 통해 cout 개체에 출력하고 싶은 내용들을 전달한다.
////cout은 전달받은 순서대로 내용을 출력한다.
//}